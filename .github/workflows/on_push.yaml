name: PHP Build

on: [push]

jobs:
  build:
    name: Build (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        #php-versions: [ '5.6', '7.0', '7.1', '7.2', '7.3', '7.4' ]
        php-versions: [ '7.4' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        # It is like an install + require, composer install --prefer-dist
        run: |
          composer require phpoffice/phpspreadsheet 1.5.* twig/twig 1.*
      - name: Run PHP Unit
        run: |
          php vendor/bin/phpunit -v
          php vendor/bin/phpunit -c phpunit.xml.dist
      - name: Build the docker-compose stack
        run: docker-compose up -d
      - name: Wait for Docker compose setup to start
        uses: cygnetdigital/wait_for_response@v2.0.0
        with:
          url: 'http://localhost:80/'
          responseCode: '200'
          timeout: 40000
          interval: 1000
      - name: Check running containers
        run: docker ps